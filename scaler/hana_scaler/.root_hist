TFile *_file0 = TFile::Open("scaler.root")
ascal->Draw("s11")
ascal->Draw("s12")
ascal->Draw("s13")
ascal->Draw("s11")
ascal->Draw("s11","s11>800")
ascal->Draw("s13","s13>800")
.q
TFile *_file0 = TFile::Open("scaler.root")
.ls
ascal->Scan("d10")
.ls
.q
TFile *_file0 = TFile::Open("scaler.root")
.ls
ascal->Draw("t1:time")
.q
TFile *_file0 = TFile::Open("scaler.root")
ascal->Draw("t1:time")
ascal->Draw("t1:time","","LEGO")
.q
TFile *_file0 = TFile::Open("scaler.root")
ascal->Draw("t1:time")
.q
TFile *_file0 = TFile::Open("scaler.root")
ascal->Scan("time")
.q
TFile *_file0 = TFile::Open("scaler.root")
ascal->Scan("time")
.q
TFile *_file0 = TFile::Open("scaler.root")
ascal->Draw("clk:run")
.ls
ascal->Print()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
ascal->Draw("clk:run")
ascal->Draw("clk-1.06*(clkp+clkm):run")
ascal->Draw("clk-1.06*(clkp+clkm)")
TH1F *h1 = new TH1F("h1","clk diff",100,-200000,200000)
ascal->Draw("clk-1.06*(clkp+clkm)>>h1")
ascal->Draw("clk:run",)
ascal->Draw("clk")
ascal->Draw("clk-1.06*(clkp+clkm)>>h1","clk>200000")
ascal->Draw("clk-1.06*(clkp+clkm)","clk>200000")
ascal->Draw("(clk-1.06*(clkp+clkm))/clk","clk>200000")
ascal->Draw("(clk-1.06*(clkp+clkm))/clk","clk>200000&&((clk-1.06*(clkp+clkm))/clk)>0.6")
ascal->Draw("run","clk>200000&&((clk-1.06*(clkp+clkm))/clk)>0.6")
ascal->Scan("run","clk>200000&&((clk-1.06*(clkp+clkm))/clk)>0.6")
.q
TFile *_file0 = TFile::Open("scalerhist.root")
.ls
h1->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
h1->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
h1->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
h1->Draw()
h2->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
h2->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
h2->Draw()
h1->Draw()
h2->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
TCanvas c1
c1->Divide(2,2)
c1->cd(1)
h1->Draw()
c1->cd(2)
h1->Draw()
c1->cd(3)
h2->Draw()
c1->cd(4)
h2->Draw()
c1->Clear()
h2->Draw()
h1->Draw()
.q
cout << 971.65 + 70
.q
TFile *_file0 = TFile::Open("scalerhist.root")
.ls
h1->Draw()
h2->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
.ls
ascal->Draw("tlost")
h1->Draw()
ascal->Draw("tlost")
h1->Draw()
ascal->Draw("tlost")
h1->Draw()
ascal->Draw("tlost")
ascal->Draw("tlost>>h1")
ascal->Draw("time")
ascal->Draw("tlost:time")
ascal->Draw("tlost:time","","box")
ascal->Draw("tlost:time","time>2500&&time<4400","box")
ascal->Draw("tfrac:time","time>2500&&time<4400","box")
ascal->Draw("tfrac","time>2500&&time<4400","box")
ascal->Draw("tfrac","time>2500&&time<4400","")
ascal->Draw("tfrac","time>2500&&time<4400&&tfrac<0.05","")
ascal->Draw("tlost","time>2500&&time<4400&&tfrac<0.05","")
ascal->Draw("tlost:time","time>2500&&time<4400","box")
ascal->Draw("tlost:time","tlost>2000","box")
ascal->Scan("tlost:time:run","tlost>2000","")
.q
TFile *_file0 = TFile::Open("scalerhist.root")
ascal->Scan("tlost:time:run","tlost>2000","")
ascal->Draw("tlost:time","time>2500&&time<4400","box")
ascal->Draw("tlost:time","time>2500&&time<4400&&tlost>100","box")
ascal->Scan("tlost:time:run","time>2500&&time<4400&&tlost>100","")
ascal->Scan("tlost:tfrac:time:run","time>2500&&time<4400&&tlost>100","")
ascal->Scan("tlost:time:run","time>2500&&time<4400&&tlost>100","")
ascal->Draw("tlost:time","time>2500&&time<4400","box")
ascal->Draw("tlost:time","","box")
ascal->Draw("tlost:time","tlost<100","box")
ascal->Draw("tlost/time","tlost<100&&time>0","box")
ascal->Draw("tlost/time","tlost<100&&time>0","")
ascal->Draw("tlost/time","tlost<100&&time>0&&(tlost/time)<0.1","")
ascal->Draw("tlost/time","tlost<100&&time>0&&(tlost/time)<0.01","")
cout << 64.8*(1-0.0078)
cout << 68.4*(1-0.0078)
cout << 68.4*(1+0.0078)
ascal->Draw("tlost/time","tlost<100&&time>0&&(tlost/time)<0.008","")
cout << 68.4*(1+0.00787)
cout << 69./1050.
.q
TFile *_file0 = TFile::Open("scalerhist.root")
ascal->Draw("tlost/time","tlost<100&&time>0&&(tlost/time)<0.008","")
ascal->Draw("tlost/time","tlost<100&&time>0","")
ascal->Draw("tlost/time","tlost<100&&time>0","box")
ascal->Draw("tlost:time","time>2500&&time<4400","box")
ascal->Draw("tlost:time","","box")
ascal->Draw("tlost:time","tlost<100","box")
ascal->Draw("tfrac:time","tlost<100","box")
ascal->Draw("tfrac:time","tlost<100&&tfrac<0.1","box")
ascal->Draw("tlost:time","tlost<100","box")
ascal->Draw("tlost:time","","box")
ascal->Draw("tlost:time","tlost<10","box")
ascal->Draw("tlost:time","tlost<18","box")
ascal->Draw("tlost:time","tlost<24","box")
1./1/04
1./1.04
1/0.972
ascal->Draw("tlost:time","tlost<24","box")
ascal->Draw("tlost:time","time>3200&&time<4400","box")
ascal->Draw("tlost:time","tlost<24","box")
TFile *_file0 = TFile::Open("scalerhist.root")
ascal->Draw("tlost:time","tlost<24","box")
ascal->Draw("tlost","tlost<24","box")
ascal->Draw("tlost","tlost<24","")
ascal->Draw("tlost","tlost<2","")
ascal->Draw("tlost:time","tlost<24","box")
ascal->Draw("tlost:time","tlost<10","box")
ascal->Draw("tlost:time","tlost<24","box")
ascal->Draw("tlost:time","","box")
ascal->Print("tlost:time:run","tlost>20")
ascal->Scan("tlost:time:run","tlost>20")
ascal->Scan("tlost:time:run","tlost>10")
ascal->Scan("tlost:time:run","run>8577")
ascal->Draw("tlost","run>8577")
ascal->Draw("tlost","")
ascal->Draw("tfrac","")
ascal->Draw("tfrac","time>200")
ascal->Draw("tfrac","time>120")
ascal->Draw("tfrac","time>300")
ascal->Draw("tlost","time>300")
ascal->Draw("tfrac","time>300")
ascal->Draw("tlost","time>300")
TH1F *ht1 = new TH1F("ht1","Time lost (sec) since run 8384",200,0,600)
TH1F *ht2 = new TH1F("ht2","Time lost (sec) since run 8577 [2nd fix]",200,0,600)
TH1F *ht1 = new TH1F("ht1","Time lost (sec) since run 8384 [1st fix]",200,0,600)
ascal->Draw("tfrac","time>300")
TH1F *ht3 = new TH1F("ht3","Fraction of data lost since run 8384 [1st fix]",200,0.0.16)
TH1F *ht3 = new TH1F("ht3","Fraction of data lost since run 8384 [1st fix]",200,0.,0.16)
TH1F *ht4 = new TH1F("ht4","Fraction of data lost since run 8577 [2nd fix]",200,0.,0.16)
ascal->Draw("tlost>>ht1","time>300")
ascal->Draw("tlost>>ht3","time>300&&run>8577")
ascal->Draw("tlost>>ht2","time>300&&run>8577")
TH1F *ht2 = new TH1F("ht2","Time lost (sec) since run 8577 [2nd fix]",200,-10,20)
ascal->Draw("tlost>>ht2","time>300&&run>8577")
ascal->Draw("tlost>>ht2","run>8577")
ascal->Scan("tlost","run>8577")
ascal->Draw("tlost>>ht2","run>8577")
TH1F *ht2 = new TH1F("ht2","Time lost (sec) since run 8577 [2nd fix]",200,-5,5)
ascal->Draw("tlost>>ht2","run>8577")
ascal->Draw("tfrac>>ht4","run>8577")
TH1F *ht4 = new TH1F("ht4","Fraction of data lost since run 8577 [2nd fix]",200,-0.01,0.01)
ascal->Draw("tfrac>>ht4","run>8577")
TH1F *ht4 = new TH1F("ht4","Fraction of data lost since run 8577 [2nd fix]",200,-0.002,0.002)
ascal->Draw("tfrac>>ht4","run>8577")
TH1F *ht4 = new TH1F("ht4","Fraction of data lost since run 8577 [2nd fix]",200,-0.005,0.005)
ascal->Draw("tfrac>>ht4","run>8577")
TH1F *ht4 = new TH1F("ht4","Fraction of data lost since run 8577 [2nd fix]",100,-0.005,0.005)
ascal->Draw("tfrac>>ht4","run>8577")
ascal->Draw("tfrac>>ht3","")
TH1F *ht3 = new TH1F("ht3","Fraction of data lost since run 8384 [1st fix]",200,-0.02,0.16)
ascal->Draw("tfrac>>ht3","")
c1->Clear()
c1->Divide(2,2)
c1->cd(1)
ht1->Draw()
TH1F *ht1 = new TH1F("ht1","Time lost (sec) since run 8384 [1st fix]",200,-200,600)
TH1F *ht1 = new TH1F("ht1","Time lost (sec) since run 8384 [1st fix]",200,-20,600)
ascal->Draw("tlost>>ht1","")
c1->cd(2)
ht3->Draw()
c1->cd(3)
ht2->Draw()
c1->cd(4)
ht4->Draw()
.q
TFile *_file0 = TFile::Open("scalerhist.root")
ascal->Draw("tfrac>>ht4","run>8577")
ascal->Draw("tfrac>>ht4","run>8577&&time>500")
.q
TFile *_file0 = TFile::Open("scaler.root")
.ls
ascal->Scan("time")
ascal->Draw("u1:time")
ascal->Draw("u3:time")
ascal->Draw("u10:time")
ascal->Draw("d10:time")
ascal->Draw("t1:time")
ascal->Draw("t1c:time")
ascal->Print()
ascal->Draw("ct1:time")
ascal->Draw("ct3:time")
ascal->Draw("ct4:time")
ascal->Draw("ct3:time")
ascal->Draw("ct5:time")
.q
cout << 694218 - 704484 
cout << (694218 - 704484 )/1024
.q
TFile *_file0 = TFile::Open("scaler.root")
.x beam.macro
.q
TFile *_file0 = TFile::Open("scaler.root")
ascal->Scan("time")
ascal->Scan("u3")
ascal->Scan("ct3")
ascal->Scan("clockcount")
ascal->Print()
.q
